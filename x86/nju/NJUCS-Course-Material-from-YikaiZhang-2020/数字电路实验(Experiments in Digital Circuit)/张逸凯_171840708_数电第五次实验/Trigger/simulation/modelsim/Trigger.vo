// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Lite Edition"

// DATE "04/07/2019 16:35:12"

// 
// Device: Altera 5CSXFC6D6F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Trigger (
	in_data,
	en,
	clk,
	out_lock2,
	out_lock1,
	clr_n);
input 	in_data;
input 	en;
input 	clk;
output 	out_lock2;
output 	out_lock1;
input 	clr_n;

// Design Ports Information
// out_lock2	=>  Location: PIN_AB23,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out_lock1	=>  Location: PIN_AA24,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clr_n	=>  Location: PIN_AB30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// en	=>  Location: PIN_Y27,	 I/O Standard: 2.5 V,	 Current Strength: Default
// in_data	=>  Location: PIN_AB28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_AJ4,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \en~input_o ;
wire \F|out_lock2~6_combout ;
wire \clr_n~input_o ;
wire \F|out_lock2~1_combout ;
wire \clk~input_o ;
wire \clk~inputCLKENA0_outclk ;
wire \in_data~input_o ;
wire \F|out_lock2~3_combout ;
wire \F|out_lock2~_emulated_q ;
wire \F|out_lock2~2_combout ;
wire \G|out_lock1~0_combout ;
wire \G|out_lock1~q ;


// Location: IOOBUF_X89_Y9_N22
cyclonev_io_obuf \out_lock2~output (
	.i(\F|out_lock2~2_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(out_lock2),
	.obar());
// synopsys translate_off
defparam \out_lock2~output .bus_hold = "false";
defparam \out_lock2~output .open_drain_output = "false";
defparam \out_lock2~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y11_N45
cyclonev_io_obuf \out_lock1~output (
	.i(\G|out_lock1~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(out_lock1),
	.obar());
// synopsys translate_off
defparam \out_lock1~output .bus_hold = "false";
defparam \out_lock1~output .open_drain_output = "false";
defparam \out_lock1~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOIBUF_X89_Y25_N21
cyclonev_io_ibuf \en~input (
	.i(en),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\en~input_o ));
// synopsys translate_off
defparam \en~input .bus_hold = "false";
defparam \en~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LABCELL_X88_Y21_N48
cyclonev_lcell_comb \F|out_lock2~6 (
// Equation(s):
// \F|out_lock2~6_combout  = ( \F|out_lock2~2_combout  & ( !\en~input_o  ) )

	.dataa(gnd),
	.datab(!\en~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(!\F|out_lock2~2_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\F|out_lock2~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \F|out_lock2~6 .extended_lut = "off";
defparam \F|out_lock2~6 .lut_mask = 64'h0000CCCC0000CCCC;
defparam \F|out_lock2~6 .shared_arith = "off";
// synopsys translate_on

// Location: IOIBUF_X89_Y21_N4
cyclonev_io_ibuf \clr_n~input (
	.i(clr_n),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clr_n~input_o ));
// synopsys translate_off
defparam \clr_n~input .bus_hold = "false";
defparam \clr_n~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LABCELL_X88_Y21_N3
cyclonev_lcell_comb \F|out_lock2~1 (
// Equation(s):
// \F|out_lock2~1_combout  = ( \F|out_lock2~1_combout  & ( \F|out_lock2~6_combout  ) ) # ( !\F|out_lock2~1_combout  & ( \F|out_lock2~6_combout  & ( !\clr_n~input_o  ) ) ) # ( \F|out_lock2~1_combout  & ( !\F|out_lock2~6_combout  & ( \clr_n~input_o  ) ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\clr_n~input_o ),
	.datad(gnd),
	.datae(!\F|out_lock2~1_combout ),
	.dataf(!\F|out_lock2~6_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\F|out_lock2~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \F|out_lock2~1 .extended_lut = "off";
defparam \F|out_lock2~1 .lut_mask = 64'h00000F0FF0F0FFFF;
defparam \F|out_lock2~1 .shared_arith = "off";
// synopsys translate_on

// Location: IOIBUF_X22_Y0_N35
cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G6
cyclonev_clkena \clk~inputCLKENA0 (
	.inclk(\clk~input_o ),
	.ena(vcc),
	.outclk(\clk~inputCLKENA0_outclk ),
	.enaout());
// synopsys translate_off
defparam \clk~inputCLKENA0 .clock_type = "global clock";
defparam \clk~inputCLKENA0 .disable_mode = "low";
defparam \clk~inputCLKENA0 .ena_register_mode = "always enabled";
defparam \clk~inputCLKENA0 .ena_register_power_up = "high";
defparam \clk~inputCLKENA0 .test_syn = "high";
// synopsys translate_on

// Location: IOIBUF_X89_Y21_N38
cyclonev_io_ibuf \in_data~input (
	.i(in_data),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\in_data~input_o ));
// synopsys translate_off
defparam \in_data~input .bus_hold = "false";
defparam \in_data~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LABCELL_X88_Y21_N54
cyclonev_lcell_comb \F|out_lock2~3 (
// Equation(s):
// \F|out_lock2~3_combout  = ( \F|out_lock2~1_combout  & ( \F|out_lock2~2_combout  & ( (!\in_data~input_o  & \en~input_o ) ) ) ) # ( !\F|out_lock2~1_combout  & ( \F|out_lock2~2_combout  & ( (!\en~input_o ) # (\in_data~input_o ) ) ) ) # ( 
// \F|out_lock2~1_combout  & ( !\F|out_lock2~2_combout  & ( (!\in_data~input_o ) # (!\en~input_o ) ) ) ) # ( !\F|out_lock2~1_combout  & ( !\F|out_lock2~2_combout  & ( (\in_data~input_o  & \en~input_o ) ) ) )

	.dataa(gnd),
	.datab(!\in_data~input_o ),
	.datac(gnd),
	.datad(!\en~input_o ),
	.datae(!\F|out_lock2~1_combout ),
	.dataf(!\F|out_lock2~2_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\F|out_lock2~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \F|out_lock2~3 .extended_lut = "off";
defparam \F|out_lock2~3 .lut_mask = 64'h0033FFCCFF3300CC;
defparam \F|out_lock2~3 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X88_Y21_N56
dffeas \F|out_lock2~_emulated (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\F|out_lock2~3_combout ),
	.asdata(vcc),
	.clrn(\clr_n~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\F|out_lock2~_emulated_q ),
	.prn(vcc));
// synopsys translate_off
defparam \F|out_lock2~_emulated .is_wysiwyg = "true";
defparam \F|out_lock2~_emulated .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X88_Y21_N27
cyclonev_lcell_comb \F|out_lock2~2 (
// Equation(s):
// \F|out_lock2~2_combout  = ( \F|out_lock2~_emulated_q  & ( \clr_n~input_o  & ( !\F|out_lock2~1_combout  ) ) ) # ( !\F|out_lock2~_emulated_q  & ( \clr_n~input_o  & ( \F|out_lock2~1_combout  ) ) ) # ( \F|out_lock2~_emulated_q  & ( !\clr_n~input_o  & ( 
// \F|out_lock2~6_combout  ) ) ) # ( !\F|out_lock2~_emulated_q  & ( !\clr_n~input_o  & ( \F|out_lock2~6_combout  ) ) )

	.dataa(gnd),
	.datab(gnd),
	.datac(!\F|out_lock2~6_combout ),
	.datad(!\F|out_lock2~1_combout ),
	.datae(!\F|out_lock2~_emulated_q ),
	.dataf(!\clr_n~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\F|out_lock2~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \F|out_lock2~2 .extended_lut = "off";
defparam \F|out_lock2~2 .lut_mask = 64'h0F0F0F0F00FFFF00;
defparam \F|out_lock2~2 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X88_Y21_N42
cyclonev_lcell_comb \G|out_lock1~0 (
// Equation(s):
// \G|out_lock1~0_combout  = ( \G|out_lock1~q  & ( \clr_n~input_o  & ( (!\en~input_o ) # (\in_data~input_o ) ) ) ) # ( !\G|out_lock1~q  & ( \clr_n~input_o  & ( (\in_data~input_o  & \en~input_o ) ) ) ) # ( \G|out_lock1~q  & ( !\clr_n~input_o  & ( !\en~input_o 
//  ) ) )

	.dataa(gnd),
	.datab(!\in_data~input_o ),
	.datac(gnd),
	.datad(!\en~input_o ),
	.datae(!\G|out_lock1~q ),
	.dataf(!\clr_n~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\G|out_lock1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \G|out_lock1~0 .extended_lut = "off";
defparam \G|out_lock1~0 .lut_mask = 64'h0000FF000033FF33;
defparam \G|out_lock1~0 .shared_arith = "off";
// synopsys translate_on

// Location: FF_X88_Y21_N43
dffeas \G|out_lock1 (
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\G|out_lock1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\G|out_lock1~q ),
	.prn(vcc));
// synopsys translate_off
defparam \G|out_lock1 .is_wysiwyg = "true";
defparam \G|out_lock1 .power_up = "low";
// synopsys translate_on

// Location: LABCELL_X64_Y14_N3
cyclonev_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .extended_lut = "off";
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 64'h0000000000000000;
defparam \~QUARTUS_CREATED_GND~I .shared_arith = "off";
// synopsys translate_on

endmodule
